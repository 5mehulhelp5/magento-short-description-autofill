<?php
/** @var $block \Werules\Autofill\Block\Adminhtml\AutofillButton */
$ajaxUrl = $block->getUrl('werules_autofill/autofill/generate');
$productId = $block->getRequest()->getParam('id');

// Check configuration values
$autofillEnabled = $block->isAutofillEnabled();
$apiKey = $block->getApiKey();
$languages = $block->getEnabledLanguages();
$shouldShowLanguages = count($languages) > 1;

// Show the button only if the feature is enabled and an API key is configured
if ($autofillEnabled && $apiKey):
    ?>
    <style>
        #werules-autofill-wrapper {
            opacity: 0;
            margin-top: 10px;
            display: flex;
            flex-direction: column;
            padding: 15px;
        }
    </style>
    <div id="werules-autofill-wrapper">
        <?php if ($shouldShowLanguages): ?>
            <label for="language-select" style="display: block; margin-bottom: 10px;">
                Select Language for Description:
                <select id="language-select" class="admin__control-select">
                    <?php foreach ($languages as $locale => $label): ?>
                        <option value="<?= $locale ?>"><?= $label ?></option>
                    <?php endforeach; ?>
                </select>
            </label>
        <?php endif; ?>
        <button id="werules-autofill-short-button" type="button" class="action-primary" onclick="autoFillShortDescription()">Autofill Short Description</button>
    </div>
    <script>
        require(['jquery', 'mage/adminhtml/form'], function ($) {
            window.autoFillShortDescription = function () {
                const language = document.getElementById('language-select')?.value || '<?= $languages[0] ?? 'en-US' ?>';
                fetchAutofillData(true, language);
            };
            window.fetchAutofillData = function (descriptionOnly = true, language = '<?= $languages[0] ?? 'en-US' ?>') {
                const productId = '<?= $productId ?>';
                const productName = document.querySelector('[name="product[name]"]')?.value || 'N/A';
                const productSelect = document.querySelector('[name="product[manufacturer]"]');
                const productBrand = productSelect?.options[productSelect.selectedIndex]?.text || 'N/A';
                const productPrice = document.querySelector('[name="product[price]"]')?.value || 'N/A';
                const shortDescription = document.getElementById('product_form_short_description');
                const metaTitleInput = document.querySelector('[name="product[meta_title]"]');
                const metaKeywordInput = document.querySelector('[name="product[meta_keyword]"]');
                const metaDescriptionInput = document.querySelector('[name="product[meta_description]"]');
                const productCategories = [];

                // Extract selected categories from multiselect DOM
                document.querySelectorAll('.admin__action-multiselect-crumb span[data-bind="text: label"]').forEach(function (category) {
                    productCategories.push(category.textContent.trim());
                });

                // Prepare data payload
                const requestData = {
                    language: language,
                    product_name: productName,
                    product_brand: productBrand,
                    product_price: productPrice,
                    product_id: productId || null,
                    product_categories: productCategories.join(', '),
                    short_description: shortDescription.value || '',
                };

                function unescapeString(str) {
                    const parsedString = str.replace(/\\(.)/g, (_, char) => {
                        switch (char) {
                            case 'n':
                                return '\n';
                            case 't':
                                return '\t';
                            case 'r':
                                return '\r';
                            case '"':
                                return '"';
                            case "'":
                                return "'";
                            case '\\':
                                return '\\';
                            default:
                                return char;
                        }
                    });

                    return parsedString.replace(/^"|"$/g, '');
                }

                $.ajax({
                    url: '<?= $ajaxUrl ?>',
                    type: 'POST',
                    data: requestData,
                    showLoader: true,
                    success: function (response) {
                        if (!descriptionOnly) {
                            if (response.meta_title || response.meta_keywords || response.meta_description) {
                                if (metaTitleInput && response.meta_title) {
                                    try {
                                        metaTitleInput.value = unescapeString(response.meta_title);
                                    } catch (e) {
                                        metaTitleInput.value = response.meta_title;
                                    }
                                }

                                if (metaKeywordInput && response.meta_keywords) {
                                    try {
                                        metaKeywordInput.value = unescapeString(response.meta_keywords);
                                    } catch (e) {
                                        metaKeywordInput.value = response.meta_keywords;
                                    }
                                }

                                if (metaDescriptionInput && response.meta_description) {
                                    try {
                                        metaDescriptionInput.value = unescapeString(response.meta_description);
                                    } catch (e) {
                                        metaDescriptionInput.value = response.meta_description;
                                    }
                                }

                                // Trigger KnockoutJS event to notify Magento of the change
                                require(['mage/utils/wrapper'], function () {
                                    const $metaTitle = $(metaTitleInput);
                                    $metaTitle.trigger('change');

                                    const $metaKeywords = $(metaKeywordInput);
                                    $metaKeywords.trigger('change');

                                    const $metaDescription = $(metaDescriptionInput);
                                    $metaDescription.trigger('change');
                                });
                            }
                        }

                        if (response.short_description) {
                            if (shortDescription && response.short_description) {
                                try {
                                    shortDescription.value = unescapeString(response.short_description);
                                } catch (e) {
                                    shortDescription.value = response.short_description;
                                }
                            }

                            // Trigger KnockoutJS event to notify Magento of the change
                            require(['mage/utils/wrapper'], function () {
                                const $textarea = $(shortDescription);
                                $textarea.trigger('change');
                            });
                        }
                    },
                    error: function (e) {
                        alert('An error occurred while generating the description.');
                        console.error(e);
                    }
                });
            };
        });

        require(['jquery', 'domReady!'], function($) {
            <?php if ($shouldShowLanguages): ?>
            const autofillButton = document.getElementById('werules_custom_button-button');
            autofillButton.classList.remove('primary');
            autofillButton.classList.add('secondary');
            autofillButton.setAttribute('onclick', "window.fetchAutofillData(false, '<?= $languages[0] ?? 'en-US' ?>')");

            const dropdownButton = document.querySelector('[data-ui-id="werules-custom-button-button-dropdown"]');
            if (dropdownButton) {
                dropdownButton.classList.remove('primary');
            }

            // move the button to be the first child of the parent
            const buttonWrapper = autofillButton.parentElement;
            buttonWrapper.parentElement.insertBefore(buttonWrapper, buttonWrapper.parentElement.firstChild);
            <?php endif; ?>

            const productContentInterval = setInterval(() => {
                const textarea = document.getElementById('product_form_short_description');

                if (textarea) {
                    const collapsibleDiv = textarea.closest('fieldset.admin__field');
                    const autofillWrapper = document.getElementById('werules-autofill-wrapper');

                    if (collapsibleDiv && autofillWrapper) {
                        collapsibleDiv.append(autofillWrapper);
                        autofillWrapper.style.opacity = '1';
                        clearInterval(productContentInterval);
                    }
                } else {
                    const content = document.querySelector('[data-index="content"]');
                    if (content) {
                        const fieldSet = content.getElementsByClassName('fieldset-wrapper-title');
                        if (fieldSet && fieldSet[0]) {
                            if (fieldSet[0].getAttribute('data-state-collapsible') === 'closed') {
                                fieldSet[0].click();
                            }
                        }
                    }
                }
            }, 500);

            const productMetaInterval = setInterval(() => {
                const metaTitleInput = document.querySelector('[name="product[meta_title]"]');
                const metaKeywordInput = document.querySelector('[name="product[meta_keyword]"]');
                const metaDescriptionInput = document.querySelector('[name="product[meta_description]"]');

                if (metaTitleInput || metaKeywordInput || metaDescriptionInput) {
                    clearInterval(productMetaInterval);
                } else {
                    const content = document.querySelector('[data-index="search-engine-optimization"]');
                    if (content) {
                        const fieldSet = content.getElementsByClassName('fieldset-wrapper-title');
                        if (fieldSet && fieldSet[0]) {
                            if (fieldSet[0].getAttribute('data-state-collapsible') === 'closed') {
                                fieldSet[0].click();
                            }
                        }
                    }
                }
            }, 500);
        });
    </script>
<?php endif; ?>
